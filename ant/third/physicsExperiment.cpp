//N個の半径Rのボール
//Hにつつ設置し、縦に入れる
//一秒ごとに筒をあけてボールを落とす
//床やボールは弾性衝突
//T秒経過後の各ボールの下端の高さ
#include<iostream>
#include<Eigen/Core>
using namespace std;
double g = 9.8;
int N, H, R, T;
int main() {
    cin >> N >> H >> R >> T;
    MatrixXint a(N, 2);//各ボールについて場所と速さを保持　速さは上がプラス、下がマイナス
    for (int i = 0; i < N; i++) {
        a(i, 0) = H + i * 2 * R;
        a(i, 1) = 0;
    }
    for (int t = 0; t < T; t++) {

    }
}
//各ボールは区別せずに、弾性衝突をするときにその二つのボールが入れ替わっていると考えて良い
//実際には各ボールの上下が入れ替わることはないので、最終的なボジションをソートすれば、自然と順番は保存されている
//そうすると、各ボールの場所だけを追跡すれば良い



